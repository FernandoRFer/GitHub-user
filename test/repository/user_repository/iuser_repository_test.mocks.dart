// Mocks generated by Mockito 5.4.4 from annotations
// in open_labs/test/repository/user_repository/iuser_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:open_labs/repository/rest_client/irest_body_content.dart'
    as _i5;
import 'package:open_labs/repository/rest_client/irest_response.dart' as _i2;

import 'iuser_repository_test.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIRestResponse_0 extends _i1.SmartFake implements _i2.IRestResponse {
  _FakeIRestResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MockRestClient404].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockRestClient404 extends _i1.Mock implements _i3.MockRestClient404 {
  MockMockRestClient404() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.IRestResponse> sendGet({
    required String? url,
    Map<String, String>? headers,
    String? authorization,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendGet,
          [],
          {
            #url: url,
            #headers: headers,
            #authorization: authorization,
          },
        ),
        returnValue: _i4.Future<_i2.IRestResponse>.value(_FakeIRestResponse_0(
          this,
          Invocation.method(
            #sendGet,
            [],
            {
              #url: url,
              #headers: headers,
              #authorization: authorization,
            },
          ),
        )),
      ) as _i4.Future<_i2.IRestResponse>);

  @override
  _i4.Future<_i2.IRestResponse> sendDelete({
    required String? url,
    Map<String, String>? headers,
    String? authorization,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendDelete,
          [],
          {
            #url: url,
            #headers: headers,
            #authorization: authorization,
          },
        ),
        returnValue: _i4.Future<_i2.IRestResponse>.value(_FakeIRestResponse_0(
          this,
          Invocation.method(
            #sendDelete,
            [],
            {
              #url: url,
              #headers: headers,
              #authorization: authorization,
            },
          ),
        )),
      ) as _i4.Future<_i2.IRestResponse>);

  @override
  _i4.Future<_i2.IRestResponse> sendPost({
    required String? url,
    required _i5.IRestBodyContent? body,
    Map<String, String>? headers,
    String? authorization,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPost,
          [],
          {
            #url: url,
            #body: body,
            #headers: headers,
            #authorization: authorization,
          },
        ),
        returnValue: _i4.Future<_i2.IRestResponse>.value(_FakeIRestResponse_0(
          this,
          Invocation.method(
            #sendPost,
            [],
            {
              #url: url,
              #body: body,
              #headers: headers,
              #authorization: authorization,
            },
          ),
        )),
      ) as _i4.Future<_i2.IRestResponse>);

  @override
  _i4.Future<_i2.IRestResponse> sendPut({
    required String? url,
    required _i5.IRestBodyContent? body,
    Map<String, String>? headers,
    String? authorization,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPut,
          [],
          {
            #url: url,
            #body: body,
            #headers: headers,
            #authorization: authorization,
          },
        ),
        returnValue: _i4.Future<_i2.IRestResponse>.value(_FakeIRestResponse_0(
          this,
          Invocation.method(
            #sendPut,
            [],
            {
              #url: url,
              #body: body,
              #headers: headers,
              #authorization: authorization,
            },
          ),
        )),
      ) as _i4.Future<_i2.IRestResponse>);
}
